{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","className","styles","button","type","name","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","wrapper","list","App","state","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","handleClick","element","target","setState","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,QAAU,8B,sHCc7CC,EAbC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACrB,OACI,oCACI,6BAAKD,IACJC,M,gBCgBEC,EAnBS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBAChC,OACI,8BACKD,EAAQE,KAAI,SAAAC,GAAM,OACd,wBAAQC,UAAWC,IAAOC,OACvBC,KAAK,SACLC,KAAML,EAENM,QAASR,EAJZ,SAI8BE,GADtBA,SCEVO,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,4BAAKA,K,gBC0BEC,EA1BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,qCACI,4CACEJ,GAAQC,GAAWC,EACb,qBAAIX,UAAWC,IAAOa,QAAtB,UACI,qBAAId,UAAWC,IAAOc,KAAtB,mBAAmCN,KACnC,qBAAIT,UAAWC,IAAOc,KAAtB,sBAAsCL,KACtC,qBAAIV,UAAWC,IAAOc,KAAtB,kBAAkCJ,KAClC,qBAAIX,UAAWC,IAAOc,KAAtB,oBAAoCH,KACpC,qBAAIZ,UAAWC,IAAOc,KAAtB,+BAA+CF,EAA/C,UAEJ,cAAC,EAAD,CAAcN,QAAQ,0BC8B3BS,E,4MAxCXC,MAAQ,CACJR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTO,mBAAqB,WAGjB,OAFoBC,OAAOC,OAAO,EAAKH,OACbI,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAIlEC,gCAAkC,WAAO,IAC7Bf,EAAS,EAAKQ,MAAdR,KACR,OAAOgB,KAAKC,MAAOjB,EAAO,EAAKS,qBAAwB,M,EAG3DS,YAAc,SAACC,GAAa,IAChBxB,EAASwB,EAAQC,OAAjBzB,KACR,EAAK0B,UAAS,SAAAb,GAAK,sBAAQb,EAAOa,EAAMb,GAAQ,O,4CAGpD,WAAW,IAAD,EACyB2B,KAAKd,MAA5BR,EADF,EACEA,KAAMC,EADR,EACQA,QAASC,EADjB,EACiBA,IAChBqB,EAAQb,OAAOa,KAAKD,KAAKd,OAChC,OACI,8BACI,eAAC,EAAD,CAASxB,MAAM,wBAAf,UACI,cAAC,EAAD,CAAiBG,QAASoC,EAAMnC,gBAAiBkC,KAAKJ,cACtD,cAAC,EAAD,CACIlB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmB,KAAKb,qBACZL,mBAAoBkB,KAAKP,6C,GAnC/BS,aCDlBC,IAASC,OACN,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAGFC,SAASC,eAAe,U,kBCR1BhD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.f91336cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3cN5J\",\"wrapper\":\"Statistics_wrapper__1MStJ\"};","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({title, children}) => {\r\n    return (\r\n        <section>\r\n            <h1>{title}</h1>\r\n            {children}\r\n        </section>          \r\n    )\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n   // children: PropTypes.isRequired,\r\n  };\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback}) => {\r\n    return (\r\n        <div>\r\n            {options.map(option =>\r\n                (<button className={styles.button} \r\n                    type=\"button\" \r\n                    name={option} \r\n                    key={option} \r\n                    onClick={onLeaveFeedback}>{option}</button>)\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p>{ message }</p> \r\n    )\r\n};\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n            <h2>Statistics</h2>\r\n            { good || neutral || bad                         \r\n                ?   <ul className={styles.wrapper}>\r\n                        <li className={styles.list}>Good: {good}</li>\r\n                        <li className={styles.list}>Neutral: {neutral}</li>\r\n                        <li className={styles.list}>Bad: {bad}</li>\r\n                        <li className={styles.list}>Total: {total}</li>\r\n                        <li className={styles.list}>Positive fedback: {positivePercentage}%</li>\r\n                    </ul>\r\n                :   <Notification message=\"No feedback given\" />\r\n            }\r\n        </>         \r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;","import { Component } from 'react';\r\nimport Section from './components/Section/Section';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './components/Statistics/Statistics';\r\n\r\nclass App extends Component { \r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n        const stateValues = Object.values(this.state);\r\n        const total = stateValues.reduce((acc, value) => acc + value, 0);\r\n        return total;\r\n    } \r\n    \r\n    countPositiveFeedbackPercentage = () => {\r\n        const { good } = this.state;\r\n        return Math.round((good / this.countTotalFeedback()) * 100);\r\n    }\r\n\r\n    handleClick = (element) => {\r\n        const { name } = element.target;\r\n        this.setState(state => ({ [name]: state[name] + 1 }));\r\n    }\r\n\r\n    render () {\r\n        const { good, neutral, bad } = this.state;\r\n        const  keys  = Object.keys(this.state);\r\n        return (\r\n            <div>\r\n                <Section title=\"Please leave feedback\"> \r\n                    <FeedbackOptions options={keys} onLeaveFeedback={this.handleClick} />\r\n                    <Statistics \r\n                        good={good} \r\n                        neutral={neutral} \r\n                        bad={bad} \r\n                        total={this.countTotalFeedback()} \r\n                        positivePercentage={this.countPositiveFeedbackPercentage()} />\r\n                </Section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2Tl4s\"};"],"sourceRoot":""}